#include "rip.h"
#include <unistd.h>

#define NUM 11




<<<<<<< .mine
rip_route_t *crea_ruta(int a,int b,int c, int d,int aa,int bb,int cc,int dd,int metrica)
=======
rip_route_t* crea_ruta(int a,int b,int c, int d,int aa,int bb,int cc,int dd,int metrica)
>>>>>>> .r115
{
  ipv4_addr_t ip;
  ip[0]= a;
  ip[1]= b;
  ip[2]= c;
  ip[3]= d;
  ipv4_addr_t mask;
  mask[0] = 255;
  mask[1] = 255;
  mask[2] = 255;
  mask[3] = 0;
  ipv4_addr_t n_hop;
  n_hop[0]= aa;
  n_hop[1]= bb;
  n_hop[2]= cc;
  n_hop[3]= dd;
<<<<<<< .mine
  int metric = metrica;
  return rip_route_create(ip,mask,n_hop,metric);
=======
  return rip_route_create(ip,mask,n_hop,metrica);
>>>>>>> .r115
}


int main()
{
  if (rip_open() == -1)
  {
    puts("error1");
    exit(-1);
  }
  rip_route_table_t *rip_table;
  
  rip_table = rip_route_table_create();
  rip_route_t *ruta[25];

  int i;
  for (i = 0; i < 5; i++)
  {
	ruta[i] = crea_ruta(192,168,1,i,192,168,1,i,5);
	rip_table = rip_route_update(rip_table,ruta[i]);
	//sleep(1);
  }
  
//    for (i = 0; i < 25; i++)
//   {
// 	ruta[i] = crea_ruta(192,168,1,i,192,168,1,i+1,4);
// 	rip_table = rip_route_update(rip_table,ruta[i]);
//   }
	ruta[0] = crea_ruta(192,168,1,7,192,168,1,7,5);
	rip_table = rip_route_table_remove(rip_table,ruta[0]);
  ruta = crea_ruta(192,168,1,2,192,168,1,13,2);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,3,192,168,1,13,3);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,4,192,168,1,168,17);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,5,192,168,1,160,0);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,6,192,168,1,0,5);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,6,192,168,1,0,2);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,6,192,168,1,0,22);
  rip_table = rip_route_table_add(rip_table,ruta);
  ruta = crea_ruta(192,168,1,6,192,168,1,0,2);
  rip_table = rip_route_table_add(rip_table,ruta);
  
  
  //ruta = crea_ruta(192,168,1,6,192,168,1,0,1);
 // rip_table = rip_route_table_remove(rip_table,ruta);
  /*
  ruta = rip_route_table_get(rip_table,3);
  rip_table = rip_route_table_remove(rip_table,ruta);
  ruta = rip_route_table_get(rip_table,2);
  rip_table = rip_route_table_remove(rip_table,ruta);
  */
  
  rip_route_table_output(stdout,rip_table);
  //rip_table = rip_route_table_add(rip_table,ruta);
  return 0; 
}
